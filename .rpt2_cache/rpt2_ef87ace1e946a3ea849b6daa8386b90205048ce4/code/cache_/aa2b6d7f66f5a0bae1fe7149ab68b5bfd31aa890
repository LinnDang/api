{"code":"// Copyright 2017-2019 @polkadot/api authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport createClass from './createClass';\r\nlet Submittable;\r\nexport default function createSubmittable(apiType, api, decorateMethod) {\r\n    return (extrinsic) => {\r\n        // This is not great, but basically what we do here is to only require the\r\n        // class right at the point it is actually needed - delaying initialization\r\n        if (!Submittable) {\r\n            Submittable = createClass({ api, apiType, decorateMethod });\r\n        }\r\n        return new Submittable(api.registry, extrinsic);\r\n    };\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/types/src/interfaces/index.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api/src/submittable/types.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api/src/base/index.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api/src/submittable/createClass.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/api/src/submittable/createSubmittable.d.ts","writeByteOrderMark":false,"text":"import { Call } from '@polkadot/types/interfaces';\r\nimport { ApiInterfaceRx, ApiTypes } from '../types';\r\nimport { SubmittableExtrinsic } from './types';\r\nimport ApiBase from '../base';\r\ndeclare type Creator<ApiType extends ApiTypes> = (extrinsic: Call | Uint8Array | string) => SubmittableExtrinsic<ApiType>;\r\nexport default function createSubmittable<ApiType extends ApiTypes>(apiType: ApiTypes, api: ApiInterfaceRx, decorateMethod: ApiBase<ApiType>['decorateMethod']): Creator<ApiType>;\r\nexport {};\r\n"}}
