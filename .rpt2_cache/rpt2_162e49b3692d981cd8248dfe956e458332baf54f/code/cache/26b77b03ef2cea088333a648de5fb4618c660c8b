{"code":"// Copyright 2017-2019 @polkadot/api-derive authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport { map } from 'rxjs/operators';\r\nimport { approvalFlagsToBools } from '../util/approvalFlagsToBools';\r\nimport { drr } from '../util/drr';\r\n/**\r\n * @name approvalsOfAt\r\n * @returns An array of boolean approvals for the account and set index, converted from the returned ApprovalFlag.\r\n * @example\r\n * <BR>\r\n *\r\n * ```javascript\r\n * api.derive.elections.approvalsOfAt(ALICE, new BN(0), (approvals) => {\r\n *   // approvals === [false, true, ...]\r\n * });\r\n * ```\r\n */\r\nexport function approvalsOfAt(api) {\r\n    return (who, at) => (api.query.elections.approvalsOf([who.toString(), at]))\r\n        .pipe(map((flags) => approvalFlagsToBools(flags)), drr());\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/types/src/interfaces/index.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/rxjs/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/index.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/rxjs/operators/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-derive/src/util/approvalFlagsToBools.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-derive/src/util/drr.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/api-derive/src/elections/approvalsOfAt.d.ts","writeByteOrderMark":false,"text":"import { AccountId, SetIndex } from '@polkadot/types/interfaces';\r\nimport { ApiInterfaceRx } from '@polkadot/api/types';\r\nimport { Observable } from 'rxjs';\r\n/**\r\n * @name approvalsOfAt\r\n * @returns An array of boolean approvals for the account and set index, converted from the returned ApprovalFlag.\r\n * @example\r\n * <BR>\r\n *\r\n * ```javascript\r\n * api.derive.elections.approvalsOfAt(ALICE, new BN(0), (approvals) => {\r\n *   // approvals === [false, true, ...]\r\n * });\r\n * ```\r\n */\r\nexport declare function approvalsOfAt(api: ApiInterfaceRx): (who: AccountId, at: SetIndex) => Observable<boolean[]>;\r\n"}}
