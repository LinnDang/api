{"code":"// Copyright 2017-2019 @polkadot/api-derive authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport { of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { drr } from '../util/drr';\r\nfunction querySubtrateV2(api) {\r\n    return of([\r\n        // get values from api.const for substrate versions post spec_version: 101\r\n        // https://github.com/paritytech/substrate/pull/2883/files#diff-5e5e1c3aec9ddfde0a9054d062ab3db9R131\r\n        api.consts.balances.creationFee,\r\n        api.consts.balances.existentialDeposit,\r\n        api.consts.balances.transactionBaseFee,\r\n        api.consts.balances.transactionByteFee,\r\n        api.consts.balances.transferFee\r\n    ]);\r\n}\r\nfunction querySubtrateV1(api) {\r\n    return api.queryMulti([\r\n        // Support older versions and get values from storage\r\n        api.query.balances.creationFee,\r\n        api.query.balances.existentialDeposit,\r\n        api.query.balances.transactionBaseFee,\r\n        api.query.balances.transactionByteFee,\r\n        api.query.balances.transferFee\r\n    ]);\r\n}\r\n/**\r\n * @name fees\r\n * @returns An object containing the combined results of the storage queries for\r\n * all relevant fees as declared in the substrate chain spec.\r\n * @example\r\n * <BR>\r\n *\r\n * ```javascript\r\n * api.derive.balances.fees(([creationFee, transferFee]) => {\r\n *   console.log(`The fee for creating a new account on this chain is ${creationFee} units. The fee required for making a transfer is ${transferFee} units.`);\r\n * });\r\n * ```\r\n */\r\nexport function fees(api) {\r\n    return () => {\r\n        return (api.consts.balances\r\n            ? querySubtrateV2(api)\r\n            : querySubtrateV1(api)).pipe(map(([creationFee, existentialDeposit, transactionBaseFee, transactionByteFee, transferFee]) => ({\r\n            creationFee,\r\n            existentialDeposit,\r\n            transactionBaseFee,\r\n            transactionByteFee,\r\n            transferFee\r\n        })), drr());\r\n    };\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/api/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-derive/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/@types/bn.js/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/rxjs/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/rxjs/operators/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-derive/src/util/drr.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/api-derive/src/balances/fees.d.ts","writeByteOrderMark":false,"text":"import { ApiInterfaceRx } from '@polkadot/api/types';\r\nimport { DerivedFees } from '../types';\r\nimport { Observable } from 'rxjs';\r\n/**\r\n * @name fees\r\n * @returns An object containing the combined results of the storage queries for\r\n * all relevant fees as declared in the substrate chain spec.\r\n * @example\r\n * <BR>\r\n *\r\n * ```javascript\r\n * api.derive.balances.fees(([creationFee, transferFee]) => {\r\n *   console.log(`The fee for creating a new account on this chain is ${creationFee} units. The fee required for making a transfer is ${transferFee} units.`);\r\n * });\r\n * ```\r\n */\r\nexport declare function fees(api: ApiInterfaceRx): () => Observable<DerivedFees>;\r\n"}}
