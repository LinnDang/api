{"code":"// Copyright 2017-2019 @polkadot/types authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport { isString } from '@polkadot/util';\r\nimport { ClassOf } from '../createType';\r\nexport function typeToConstructor(type) {\r\n    return (isString(type)\r\n        ? ClassOf(type)\r\n        : type);\r\n}\r\n/**\r\n * @description takes an input map of the form `{ [string]: string | Constructor }` and returns a map of `{ [string]: Conbstructor }`\r\n */\r\nexport function mapToTypeMap(input) {\r\n    const output = {};\r\n    Object.entries(input).forEach(([key, type]) => {\r\n        output[key] = typeToConstructor(type);\r\n    });\r\n    return output;\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/types/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/@polkadot/util/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/createType.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/types/src/codec/utils/mapToTypeMap.d.ts","writeByteOrderMark":false,"text":"import { Codec, Constructor, InterfaceTypes } from '../../types';\r\nexport declare function typeToConstructor<T = Codec>(type: InterfaceTypes | Constructor<T>): Constructor<T>;\r\n/**\r\n * @description takes an input map of the form `{ [string]: string | Constructor }` and returns a map of `{ [string]: Conbstructor }`\r\n */\r\nexport declare function mapToTypeMap(input: Record<string, InterfaceTypes | Constructor>): Record<string, Constructor>;\r\n"}}
