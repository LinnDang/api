{"code":"// Copyright 2017-2019 @polkadot/types authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport Option from '../../codec/Option';\r\nimport Struct from '../../codec/Struct';\r\nimport Vec from '../../codec/Vec';\r\nimport Text from '../../primitive/Text';\r\nimport Type from '../../primitive/Type';\r\nimport U16 from '../../primitive/U16';\r\nimport { StorageMetadata } from './Storage';\r\nexport class FunctionArgumentMetadata extends Struct {\r\n    constructor(value) {\r\n        super({\r\n            name: Text,\r\n            type: Type\r\n        }, value);\r\n    }\r\n    /**\r\n     * @description The argument name\r\n     */\r\n    get name() {\r\n        return this.get('name');\r\n    }\r\n    /**\r\n     * @description The [[Type]]\r\n     */\r\n    get type() {\r\n        return this.get('type');\r\n    }\r\n}\r\nexport class FunctionMetadata extends Struct {\r\n    constructor(value) {\r\n        super({\r\n            id: U16,\r\n            name: Text,\r\n            args: Vec.with(FunctionArgumentMetadata),\r\n            documentation: Vec.with(Text)\r\n        }, value);\r\n    }\r\n    /**\r\n     * @description The arguments of [[Type]]\r\n     */\r\n    get args() {\r\n        return this.get('args');\r\n    }\r\n    /**\r\n     * @description The [[FunctionArgumentMetadata]] for arguments\r\n     * @deprecated Use `.args` instead\r\n     */\r\n    get arguments() {\r\n        return this.get('arguments');\r\n    }\r\n    /**\r\n     * @description The [[Text]] documentation\r\n     */\r\n    get documentation() {\r\n        return this.get('documentation');\r\n    }\r\n    /**\r\n     * @description The [[Text]] documentation\r\n     * @deprecated Use `.documentation` instead.\r\n     */\r\n    get docs() {\r\n        return this.documentation;\r\n    }\r\n    /**\r\n     * @description The `[sectionIndex, methodIndex]` call id\r\n     */\r\n    get id() {\r\n        return this.get('id');\r\n    }\r\n    /**\r\n     * @description The call name\r\n     */\r\n    get name() {\r\n        return this.get('name');\r\n    }\r\n}\r\nexport class CallMetadata extends Struct {\r\n    constructor(value) {\r\n        super({\r\n            name: Text,\r\n            functions: Vec.with(FunctionMetadata)\r\n        }, value);\r\n    }\r\n    /**\r\n     * @description The functions available as [[FunctionMetadata]]\r\n     */\r\n    get functions() {\r\n        return this.get('functions');\r\n    }\r\n    /**\r\n     * @description The section name\r\n     */\r\n    get name() {\r\n        return this.get('name');\r\n    }\r\n}\r\nexport class ModuleMetadata extends Struct {\r\n    constructor(value) {\r\n        super({\r\n            name: Text,\r\n            call: CallMetadata\r\n        }, value);\r\n    }\r\n    /**\r\n     * @description The calls as [[FunctionMetadata]]\r\n     */\r\n    get call() {\r\n        return this.get('call');\r\n    }\r\n    /**\r\n     * @description The name\r\n     */\r\n    get name() {\r\n        return this.get('name');\r\n    }\r\n}\r\nexport class RuntimeModuleMetadata extends Struct {\r\n    constructor(value) {\r\n        super({\r\n            prefix: Text,\r\n            module: ModuleMetadata,\r\n            storage: Option.with(StorageMetadata)\r\n        }, value);\r\n    }\r\n    /**\r\n     * @description The [[ModuleMetadata]]\r\n     */\r\n    get module() {\r\n        return this.get('module');\r\n    }\r\n    /**\r\n     * @description The prefix\r\n     */\r\n    get prefix() {\r\n        return this.get('prefix');\r\n    }\r\n    /**\r\n     * @description The optional [[StorageMetadata]]\r\n     */\r\n    get storage() {\r\n        return this.get('storage');\r\n    }\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/Option.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/Struct.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/Vec.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/primitive/Text.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/primitive/Type.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/primitive/U16.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/Metadata/v0/Storage.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/types/src/Metadata/v0/Modules.d.ts","writeByteOrderMark":false,"text":"import Option from '../../codec/Option';\r\nimport Struct from '../../codec/Struct';\r\nimport Vec from '../../codec/Vec';\r\nimport Text from '../../primitive/Text';\r\nimport Type from '../../primitive/Type';\r\nimport U16 from '../../primitive/U16';\r\nimport { StorageMetadata } from './Storage';\r\nexport declare class FunctionArgumentMetadata extends Struct {\r\n    constructor(value?: any);\r\n    /**\r\n     * @description The argument name\r\n     */\r\n    readonly name: Text;\r\n    /**\r\n     * @description The [[Type]]\r\n     */\r\n    readonly type: Type;\r\n}\r\nexport declare class FunctionMetadata extends Struct {\r\n    constructor(value?: any);\r\n    /**\r\n     * @description The arguments of [[Type]]\r\n     */\r\n    readonly args: Vec<FunctionArgumentMetadata>;\r\n    /**\r\n     * @description The [[FunctionArgumentMetadata]] for arguments\r\n     * @deprecated Use `.args` instead\r\n     */\r\n    readonly arguments: Vec<FunctionArgumentMetadata>;\r\n    /**\r\n     * @description The [[Text]] documentation\r\n     */\r\n    readonly documentation: Vec<Text>;\r\n    /**\r\n     * @description The [[Text]] documentation\r\n     * @deprecated Use `.documentation` instead.\r\n     */\r\n    readonly docs: Vec<Text>;\r\n    /**\r\n     * @description The `[sectionIndex, methodIndex]` call id\r\n     */\r\n    readonly id: U16;\r\n    /**\r\n     * @description The call name\r\n     */\r\n    readonly name: Text;\r\n}\r\nexport declare class CallMetadata extends Struct {\r\n    constructor(value?: any);\r\n    /**\r\n     * @description The functions available as [[FunctionMetadata]]\r\n     */\r\n    readonly functions: Vec<FunctionMetadata>;\r\n    /**\r\n     * @description The section name\r\n     */\r\n    readonly name: Text;\r\n}\r\nexport declare class ModuleMetadata extends Struct {\r\n    constructor(value?: any);\r\n    /**\r\n     * @description The calls as [[FunctionMetadata]]\r\n     */\r\n    readonly call: CallMetadata;\r\n    /**\r\n     * @description The name\r\n     */\r\n    readonly name: Text;\r\n}\r\nexport declare class RuntimeModuleMetadata extends Struct {\r\n    constructor(value?: any);\r\n    /**\r\n     * @description The [[ModuleMetadata]]\r\n     */\r\n    readonly module: ModuleMetadata;\r\n    /**\r\n     * @description The prefix\r\n     */\r\n    readonly prefix: Text;\r\n    /**\r\n     * @description The optional [[StorageMetadata]]\r\n     */\r\n    readonly storage: Option<StorageMetadata>;\r\n}\r\n"}}
