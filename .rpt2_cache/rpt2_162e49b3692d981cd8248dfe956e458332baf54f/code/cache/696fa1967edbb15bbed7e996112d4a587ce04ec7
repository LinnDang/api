{"code":"// Copyright 2017-2019 @polkadot/types authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport { isNull } from '@polkadot/util';\r\n/**\r\n * @name Null\r\n * @description\r\n * Implements a type that does not contain anything (apart from `null`)\r\n */\r\nexport default class Null {\r\n    /**\r\n     * @description The length of the value when encoded as a Uint8Array\r\n     */\r\n    get encodedLength() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @description returns a hash of the contents\r\n     */\r\n    get hash() {\r\n        throw new Error('.hash is not implemented on Null');\r\n    }\r\n    /**\r\n     * @description Checks if the value is an empty value (always true)\r\n     */\r\n    get isEmpty() {\r\n        return true;\r\n    }\r\n    /**\r\n     * @description Compares the value of the input to see if there is a match\r\n     */\r\n    eq(other) {\r\n        return other instanceof Null || isNull(other);\r\n    }\r\n    /**\r\n     * @description Returns a hex string representation of the value\r\n     */\r\n    toHex() {\r\n        return '0x';\r\n    }\r\n    /**\r\n     * @description Converts the Object to JSON, typically used for RPC transfers\r\n     */\r\n    toJSON() {\r\n        return null;\r\n    }\r\n    /**\r\n     * @description Returns the base runtime type name for this instance\r\n     */\r\n    toRawType() {\r\n        return 'Null';\r\n    }\r\n    /**\r\n     * @description Returns the string representation of the value\r\n     */\r\n    toString() {\r\n        return '';\r\n    }\r\n    /**\r\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\r\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    toU8a(isBare) {\r\n        return new Uint8Array();\r\n    }\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/types/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/@polkadot/util/index.d.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/types/src/primitive/Null.d.ts","writeByteOrderMark":false,"text":"import { Codec, IHash } from '../types';\r\n/**\r\n * @name Null\r\n * @description\r\n * Implements a type that does not contain anything (apart from `null`)\r\n */\r\nexport default class Null implements Codec {\r\n    /**\r\n     * @description The length of the value when encoded as a Uint8Array\r\n     */\r\n    readonly encodedLength: number;\r\n    /**\r\n     * @description returns a hash of the contents\r\n     */\r\n    readonly hash: IHash;\r\n    /**\r\n     * @description Checks if the value is an empty value (always true)\r\n     */\r\n    readonly isEmpty: boolean;\r\n    /**\r\n     * @description Compares the value of the input to see if there is a match\r\n     */\r\n    eq(other?: any): boolean;\r\n    /**\r\n     * @description Returns a hex string representation of the value\r\n     */\r\n    toHex(): string;\r\n    /**\r\n     * @description Converts the Object to JSON, typically used for RPC transfers\r\n     */\r\n    toJSON(): null;\r\n    /**\r\n     * @description Returns the base runtime type name for this instance\r\n     */\r\n    toRawType(): string;\r\n    /**\r\n     * @description Returns the string representation of the value\r\n     */\r\n    toString(): string;\r\n    /**\r\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\r\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\r\n     */\r\n    toU8a(isBare?: boolean): Uint8Array;\r\n}\r\n"}}
