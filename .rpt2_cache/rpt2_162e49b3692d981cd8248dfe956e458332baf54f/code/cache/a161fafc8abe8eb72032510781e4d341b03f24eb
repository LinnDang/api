{"code":"// Copyright 2017-2019 @polkadot/types authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\n// Quick and dirty flatten (.flat() not available)\r\nexport default function flattenUniq(list) {\r\n    const flat = list.reduce((result, entry) => {\r\n        return result.concat(Array.isArray(entry)\r\n            ? flattenUniq(entry)\r\n            : entry);\r\n    }, []);\r\n    return [...new Set(flat)]\r\n        .filter((value) => value)\r\n        .sort();\r\n}\r\n","references":[],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/types/src/Metadata/util/flattenUniq.d.ts","writeByteOrderMark":false,"text":"export default function flattenUniq(list: any[]): any[];\r\n"}}
