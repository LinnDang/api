{"code":"// Copyright 2017-2019 @polkadot/api-derive authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport { map } from 'rxjs/operators';\r\nimport { Option } from '@polkadot/types';\r\nimport { isNull } from '@polkadot/util';\r\nimport { ReferendumInfoExtended } from '../type';\r\nimport { drr } from '../util/drr';\r\nexport function constructInfo(index, optionInfo) {\r\n    const info = optionInfo\r\n        ? optionInfo.unwrapOr(null)\r\n        : null;\r\n    return new Option(ReferendumInfoExtended, isNull(info)\r\n        ? null\r\n        : new ReferendumInfoExtended(info, index));\r\n}\r\nexport function referendumInfo(api) {\r\n    return (index) => {\r\n        return (api.query.democracy.referendumInfoOf(index))\r\n            .pipe(map((optionInfo) => constructInfo(index, optionInfo)), drr());\r\n    };\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/types/src/interfaces/democracy/index.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/@types/bn.js/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/rxjs/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/rxjs/operators/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/index.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/@polkadot/util/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-derive/src/type/index.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-derive/src/util/drr.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/api-derive/src/democracy/referendumInfo.d.ts","writeByteOrderMark":false,"text":"import { ReferendumInfo } from '@polkadot/types/interfaces/democracy';\r\nimport BN from 'bn.js';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiInterfaceRx } from '@polkadot/api/types';\r\nimport { Option } from '@polkadot/types';\r\nimport { ReferendumInfoExtended } from '../type';\r\nexport declare function constructInfo(index: BN | number, optionInfo?: Option<ReferendumInfo>): Option<ReferendumInfoExtended>;\r\nexport declare function referendumInfo(api: ApiInterfaceRx): (index: BN | number) => Observable<Option<ReferendumInfoExtended>>;\r\n"}}
