{"code":"// Copyright 2017-2019 @polkadot/types authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport { isHex, hexToU8a, u8aConcat } from '@polkadot/util';\r\nimport { MAGIC_NUMBER } from './MagicNumber';\r\nimport MetadataVersioned from './MetadataVersioned';\r\n/**\r\n * @name Metadata\r\n * @description\r\n * The versioned runtime metadata as a decoded structure\r\n */\r\nexport default class Metadata extends MetadataVersioned {\r\n    constructor(value) {\r\n        super(Metadata.decodeMetadata(value));\r\n    }\r\n    // first we try and parse using the versioned structure, if this does fail,\r\n    // we adjust with the magic number and a manual version and re-try. As soon as\r\n    // we remove support for V0, we will just do a new here\r\n    static decodeMetadata(_value = new Uint8Array()) {\r\n        const value = isHex(_value)\r\n            ? hexToU8a(_value)\r\n            : _value;\r\n        try {\r\n            return new MetadataVersioned(value);\r\n        }\r\n        catch (error) {\r\n            if (error.message.indexOf('MagicNumber mismatch') === -1) {\r\n                throw error;\r\n            }\r\n        }\r\n        return new MetadataVersioned(u8aConcat(MAGIC_NUMBER.toU8a(), // manually add the magic number\r\n        Uint8Array.from([0]), // add the version for the original\r\n        value // the actual data as retrieved\r\n        ));\r\n    }\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/node_modules/@polkadot/util/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/Metadata/MagicNumber.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/Metadata/MetadataVersioned.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/types/src/Metadata/Metadata.d.ts","writeByteOrderMark":false,"text":"import MetadataVersioned from './MetadataVersioned';\r\n/**\r\n * @name Metadata\r\n * @description\r\n * The versioned runtime metadata as a decoded structure\r\n */\r\nexport default class Metadata extends MetadataVersioned {\r\n    constructor(value?: Uint8Array | string);\r\n    private static decodeMetadata;\r\n}\r\n"}}
