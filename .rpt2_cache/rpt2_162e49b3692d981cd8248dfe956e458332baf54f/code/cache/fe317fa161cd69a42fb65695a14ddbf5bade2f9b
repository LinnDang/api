{"code":"// Copyright 2017-2019 @polkadot/api-derive authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport { map } from 'rxjs/operators';\r\nimport { drr } from '../util/drr';\r\nfunction query(api) {\r\n    return api.queryMulti([\r\n        api.query.elections.members,\r\n        api.query.elections.candidates,\r\n        api.query.elections.candidateCount,\r\n        api.query.elections.desiredSeats,\r\n        api.query.elections.nextVoterSet,\r\n        api.query.elections.termDuration,\r\n        api.query.elections.voteCount,\r\n        api.query.elections.voterCount\r\n    ]);\r\n}\r\n/**\r\n * @name info\r\n * @returns An object containing the combined results of the storage queries for\r\n * all relevant election module properties.\r\n * @example\r\n * <BR>\r\n *\r\n * ```javascript\r\n * api.derive.elections.info(([members, candidates]) => {\r\n *   console.log(`There are currently ${members.length} council members and ${candidates.length} prospective council candidates.`);\r\n * });\r\n * ```\r\n */\r\nexport function info(api) {\r\n    return () => {\r\n        return query(api).pipe(map(([members, candidates, candidateCount, desiredSeats, nextVoterSet, termDuration, voteCount, voterCount]) => ({\r\n            members: members.reduce((record, [accountId, blockNumber]) => {\r\n                record[accountId.toString()] = blockNumber;\r\n                return record;\r\n            }, {}),\r\n            candidates,\r\n            candidateCount,\r\n            desiredSeats,\r\n            nextVoterSet,\r\n            termDuration,\r\n            voteCount,\r\n            voterCount\r\n        })), drr());\r\n    };\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/types/src/interfaces/index.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/@types/bn.js/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/rxjs/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/rxjs/operators/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-derive/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-derive/src/util/drr.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/api-derive/src/elections/info.d.ts","writeByteOrderMark":false,"text":"import { Observable } from 'rxjs';\r\nimport { ApiInterfaceRx } from '@polkadot/api/types';\r\nimport { DerivedElectionsInfo } from '../types';\r\n/**\r\n * @name info\r\n * @returns An object containing the combined results of the storage queries for\r\n * all relevant election module properties.\r\n * @example\r\n * <BR>\r\n *\r\n * ```javascript\r\n * api.derive.elections.info(([members, candidates]) => {\r\n *   console.log(`There are currently ${members.length} council members and ${candidates.length} prospective council candidates.`);\r\n * });\r\n * ```\r\n */\r\nexport declare function info(api: ApiInterfaceRx): () => Observable<DerivedElectionsInfo>;\r\n"}}
