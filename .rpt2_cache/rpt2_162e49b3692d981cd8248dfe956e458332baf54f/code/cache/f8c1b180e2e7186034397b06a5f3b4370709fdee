{"code":"// Copyright 2017-2019 @polkadot/types authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport Struct from '../../codec/Struct';\r\nimport Tuple from '../../codec/Tuple';\r\nimport Vec from '../../codec/Vec';\r\nimport Text from '../../primitive/Text';\r\nimport Type from '../../primitive/Type';\r\nexport class EventMetadata extends Struct {\r\n    constructor(value) {\r\n        super({\r\n            name: Text,\r\n            args: Vec.with(Type),\r\n            documentation: Vec.with(Text)\r\n        }, value);\r\n    }\r\n    /**\r\n     * @description The arguments of [[Type]]\r\n     */\r\n    get args() {\r\n        return this.get('args');\r\n    }\r\n    /**\r\n     * @description The arguments of [[Type]]\r\n     * @deprecated Use `.args` instead\r\n     */\r\n    get arguments() {\r\n        return this.args;\r\n    }\r\n    /**\r\n     * @description The [[Text]] documentation\r\n     */\r\n    get documentation() {\r\n        return this.get('documentation');\r\n    }\r\n    /**\r\n     * @description The [[Text]] documentation\r\n     * @deprecated Use `.documentation` instead.\r\n     */\r\n    get docs() {\r\n        return this.documentation;\r\n    }\r\n    /**\r\n     * @description The name for the event\r\n     */\r\n    get name() {\r\n        return this.get('name');\r\n    }\r\n}\r\nexport class OuterEventEventMetadata extends Tuple {\r\n    constructor(value) {\r\n        super({\r\n            Text,\r\n            'Vec<EventMetadata>': Vec.with(EventMetadata)\r\n        }, value);\r\n    }\r\n    /**\r\n     * @description The [[EventMetadata]]\r\n     */\r\n    get events() {\r\n        return this[1];\r\n    }\r\n    /**\r\n     * @description The name of the section\r\n     */\r\n    get name() {\r\n        return this[0];\r\n    }\r\n}\r\nexport class OuterEventMetadata extends Struct {\r\n    constructor(value) {\r\n        super({\r\n            name: Text,\r\n            events: Vec.with(OuterEventEventMetadata)\r\n        }, value);\r\n    }\r\n    /**\r\n     * @description The [[OuterEventEventMetadata]]\r\n     */\r\n    get events() {\r\n        return this.get('events');\r\n    }\r\n    /**\r\n     * @description The name of the event\r\n     */\r\n    get name() {\r\n        return this.get('name');\r\n    }\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/Struct.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/Tuple.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/Vec.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/primitive/Text.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/primitive/Type.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/types/src/Metadata/v0/Events.d.ts","writeByteOrderMark":false,"text":"import Struct from '../../codec/Struct';\r\nimport Tuple from '../../codec/Tuple';\r\nimport Vec from '../../codec/Vec';\r\nimport Text from '../../primitive/Text';\r\nimport Type from '../../primitive/Type';\r\nexport declare class EventMetadata extends Struct {\r\n    constructor(value?: any);\r\n    /**\r\n     * @description The arguments of [[Type]]\r\n     */\r\n    readonly args: Vec<Type>;\r\n    /**\r\n     * @description The arguments of [[Type]]\r\n     * @deprecated Use `.args` instead\r\n     */\r\n    readonly arguments: Vec<Type>;\r\n    /**\r\n     * @description The [[Text]] documentation\r\n     */\r\n    readonly documentation: Vec<Text>;\r\n    /**\r\n     * @description The [[Text]] documentation\r\n     * @deprecated Use `.documentation` instead.\r\n     */\r\n    readonly docs: Vec<Text>;\r\n    /**\r\n     * @description The name for the event\r\n     */\r\n    readonly name: Text;\r\n}\r\nexport declare class OuterEventEventMetadata extends Tuple {\r\n    constructor(value?: any);\r\n    /**\r\n     * @description The [[EventMetadata]]\r\n     */\r\n    readonly events: Vec<EventMetadata>;\r\n    /**\r\n     * @description The name of the section\r\n     */\r\n    readonly name: Text;\r\n}\r\nexport declare class OuterEventMetadata extends Struct {\r\n    constructor(value?: any);\r\n    /**\r\n     * @description The [[OuterEventEventMetadata]]\r\n     */\r\n    readonly events: Vec<OuterEventEventMetadata>;\r\n    /**\r\n     * @description The name of the event\r\n     */\r\n    readonly name: Text;\r\n}\r\n"}}
