{"code":"// Copyright 2017-2019 @polkadot/api-derive authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport { map } from 'rxjs/operators';\r\nimport { createType } from '@polkadot/types';\r\nimport { drr } from '../util/drr';\r\nimport { voterPositions } from './voterPositions';\r\n/**\r\n * @name voters\r\n * @returns An array of all current voters from all sets.\r\n * @example\r\n * <BR>\r\n *\r\n * ```javascript\r\n * api.derive.elections.voters((voters) => {\r\n *   console.log(`There are ${voters.length} current voters.`);\r\n * });\r\n * ```\r\n */\r\nexport function voters(api) {\r\n    return () => voterPositions(api)().pipe(map((voterPositions) => createType('Vec<AccountId>', Object.entries(voterPositions)\r\n        .sort((a, b) => a[1].globalIndex.cmp(b[1].globalIndex))\r\n        .map(([accountId]) => createType('AccountId', accountId)))), drr());\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/api/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/interfaces/index.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-derive/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/rxjs/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/rxjs/operators/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/index.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-derive/src/util/drr.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-derive/src/elections/voterPositions.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/api-derive/src/elections/voters.d.ts","writeByteOrderMark":false,"text":"import { ApiInterfaceRx } from '@polkadot/api/types';\r\nimport { AccountId } from '@polkadot/types/interfaces';\r\nimport { Observable } from 'rxjs';\r\nimport { Vec } from '@polkadot/types';\r\n/**\r\n * @name voters\r\n * @returns An array of all current voters from all sets.\r\n * @example\r\n * <BR>\r\n *\r\n * ```javascript\r\n * api.derive.elections.voters((voters) => {\r\n *   console.log(`There are ${voters.length} current voters.`);\r\n * });\r\n * ```\r\n */\r\nexport declare function voters(api: ApiInterfaceRx): () => Observable<Vec<AccountId>>;\r\n"}}
