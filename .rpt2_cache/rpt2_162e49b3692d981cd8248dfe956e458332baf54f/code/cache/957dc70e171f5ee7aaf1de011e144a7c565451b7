{"code":"// Copyright 2017-2019 @polkadot/api-metadata authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport { stringCamelCase, stringLowerFirst } from '@polkadot/util';\r\nimport createFunction from './createFunction';\r\nimport { storage } from './storage';\r\n/**\r\n * Return an object with the modules and the functions to access their storage.\r\n *\r\n * @param metadata - The metadata\r\n */\r\nexport default function fromMetadata(metadata) {\r\n    return metadata.asV7.modules.reduce((result, moduleMetadata) => {\r\n        if (moduleMetadata.storage.isNone) {\r\n            return result;\r\n        }\r\n        const { name } = moduleMetadata;\r\n        const section = stringCamelCase(name.toString());\r\n        const unwrapped = moduleMetadata.storage.unwrap();\r\n        const prefix = unwrapped.prefix.toString();\r\n        // For access, we change the index names, i.e. Balances.FreeBalance -> balances.freeBalance\r\n        result[section] = unwrapped.items.reduce((newModule, meta) => {\r\n            const method = meta.name.toString();\r\n            newModule[stringLowerFirst(method)] = createFunction({\r\n                meta,\r\n                method,\r\n                prefix,\r\n                section\r\n            });\r\n            return newModule;\r\n        }, {});\r\n        return result;\r\n    }, { ...storage });\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/api-metadata/src/storage/types.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/Metadata/index.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/@polkadot/util/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-metadata/src/storage/fromMetadata/createFunction.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-metadata/src/storage/fromMetadata/storage.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/api-metadata/src/storage/fromMetadata/index.d.ts","writeByteOrderMark":false,"text":"import { Storage } from '../types';\r\nimport Metadata from '@polkadot/types/Metadata';\r\n/**\r\n * Return an object with the modules and the functions to access their storage.\r\n *\r\n * @param metadata - The metadata\r\n */\r\nexport default function fromMetadata(metadata: Metadata): Storage;\r\n"}}
