{"code":"// Copyright 2017-2019 @polkadot/types authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport Option from '../../codec/Option';\r\nimport Struct from '../../codec/Struct';\r\nimport Vec from '../../codec/Vec';\r\nimport Text from '../../primitive/Text';\r\nimport { flattenUniq, validateTypes } from '../util';\r\nimport { FunctionMetadata } from './Calls';\r\nimport { EventMetadata } from './Events';\r\nimport { StorageFunctionMetadata } from './Storage';\r\n/**\r\n * @name ModuleMetadata\r\n * @description\r\n * The definition of a module in the system\r\n */\r\nexport class ModuleMetadata extends Struct {\r\n    constructor(value) {\r\n        super({\r\n            name: Text,\r\n            prefix: Text,\r\n            storage: Option.with(Vec.with(StorageFunctionMetadata)),\r\n            calls: Option.with(Vec.with(FunctionMetadata)),\r\n            events: Option.with(Vec.with(EventMetadata))\r\n        }, value);\r\n    }\r\n    /**\r\n     * @description the module calls\r\n     */\r\n    get calls() {\r\n        return this.get('calls');\r\n    }\r\n    /**\r\n     * @description the module events\r\n     */\r\n    get events() {\r\n        return this.get('events');\r\n    }\r\n    /**\r\n     * @description the module name\r\n     */\r\n    get name() {\r\n        return this.get('name');\r\n    }\r\n    /**\r\n     * @description the module prefix\r\n     */\r\n    get prefix() {\r\n        return this.get('prefix');\r\n    }\r\n    /**\r\n     * @description the associated module storage\r\n     */\r\n    get storage() {\r\n        return this.get('storage');\r\n    }\r\n}\r\n/**\r\n * @name MetadataV4\r\n * @description\r\n * The runtime metadata as a decoded structure\r\n */\r\nexport default class MetadataV4 extends Struct {\r\n    constructor(value) {\r\n        super({\r\n            modules: Vec.with(ModuleMetadata)\r\n        }, value);\r\n    }\r\n    /**\r\n     * @description The associated modules for this structure\r\n     */\r\n    get modules() {\r\n        return this.get('modules');\r\n    }\r\n    get callNames() {\r\n        return this.modules.map((mod) => mod.calls.isNone\r\n            ? []\r\n            : mod.calls.unwrap().map((fn) => fn.args.map((arg) => arg.type.toString())));\r\n    }\r\n    get eventNames() {\r\n        return this.modules.map((mod) => mod.events.isNone\r\n            ? []\r\n            : mod.events.unwrap().map((event) => event.args.map((arg) => arg.toString())));\r\n    }\r\n    get storageNames() {\r\n        return this.modules.map((mod) => mod.storage.isNone\r\n            ? []\r\n            : mod.storage.unwrap().map((fn) => {\r\n                if (fn.type.isMap) {\r\n                    return [fn.type.asMap.key.toString(), fn.type.asMap.value.toString()];\r\n                }\r\n                else if (fn.type.isDoubleMap) {\r\n                    return [fn.type.asDoubleMap.key1.toString(), fn.type.asDoubleMap.key2.toString(), fn.type.asDoubleMap.value.toString()];\r\n                }\r\n                else {\r\n                    return [fn.type.asType.toString()];\r\n                }\r\n            }));\r\n    }\r\n    /**\r\n     * @description Helper to retrieve a list of all type that are found, sorted and de-deuplicated\r\n     */\r\n    getUniqTypes(throwError) {\r\n        const types = flattenUniq([this.callNames, this.eventNames, this.storageNames]);\r\n        validateTypes(types, throwError);\r\n        return types;\r\n    }\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/types/src/Metadata/types.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/Option.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/Struct.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/Vec.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/primitive/Text.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/Metadata/util/index.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/Metadata/v4/Calls.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/Metadata/v4/Events.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/Metadata/v4/Storage.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/types/src/Metadata/v4/Metadata.d.ts","writeByteOrderMark":false,"text":"import { MetadataInterface } from '../types';\r\nimport Option from '../../codec/Option';\r\nimport Struct from '../../codec/Struct';\r\nimport Vec from '../../codec/Vec';\r\nimport Text from '../../primitive/Text';\r\nimport { FunctionMetadata } from './Calls';\r\nimport { EventMetadata } from './Events';\r\nimport { StorageFunctionMetadata } from './Storage';\r\n/**\r\n * @name ModuleMetadata\r\n * @description\r\n * The definition of a module in the system\r\n */\r\nexport declare class ModuleMetadata extends Struct {\r\n    constructor(value?: any);\r\n    /**\r\n     * @description the module calls\r\n     */\r\n    readonly calls: Option<Vec<FunctionMetadata>>;\r\n    /**\r\n     * @description the module events\r\n     */\r\n    readonly events: Option<Vec<EventMetadata>>;\r\n    /**\r\n     * @description the module name\r\n     */\r\n    readonly name: Text;\r\n    /**\r\n     * @description the module prefix\r\n     */\r\n    readonly prefix: Text;\r\n    /**\r\n     * @description the associated module storage\r\n     */\r\n    readonly storage: Option<Vec<StorageFunctionMetadata>>;\r\n}\r\n/**\r\n * @name MetadataV4\r\n * @description\r\n * The runtime metadata as a decoded structure\r\n */\r\nexport default class MetadataV4 extends Struct implements MetadataInterface<ModuleMetadata> {\r\n    constructor(value?: any);\r\n    /**\r\n     * @description The associated modules for this structure\r\n     */\r\n    readonly modules: Vec<ModuleMetadata>;\r\n    private readonly callNames;\r\n    private readonly eventNames;\r\n    private readonly storageNames;\r\n    /**\r\n     * @description Helper to retrieve a list of all type that are found, sorted and de-deuplicated\r\n     */\r\n    getUniqTypes(throwError: boolean): string[];\r\n}\r\n"}}
