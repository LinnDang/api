{"code":"// Copyright 2017-2019 @polkadot/jsonrpc authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport createMethod from './create/method';\r\nimport createParam from './create/param';\r\n// NOTE Order is the same as in Rust\r\nconst getHeader = {\r\n    description: 'Retrieves the header for a specific block',\r\n    params: [\r\n        // @ts-ignore srml types\r\n        createParam('hash', 'Hash', { isOptional: true })\r\n    ],\r\n    type: 'Header'\r\n};\r\nconst getBlock = {\r\n    description: 'Get header and body of a relay chain block',\r\n    params: [\r\n        // @ts-ignore srml types\r\n        createParam('hash', 'Hash', { isOptional: true })\r\n    ],\r\n    type: 'SignedBlock'\r\n};\r\nconst getBlockHash = {\r\n    description: 'Get the block hash for a specific block',\r\n    params: [\r\n        // @ts-ignore This whould be fixed if we can get types from srml strings\r\n        createParam('blockNumber', 'BlockNumber', { isOptional: true })\r\n    ],\r\n    // @ts-ignore srml types\r\n    type: 'Hash'\r\n};\r\nconst getFinalizedHead = {\r\n    description: 'Get hash of the last finalized block in the canon chain',\r\n    params: [],\r\n    // @ts-ignore srml types\r\n    type: 'Hash'\r\n};\r\nconst getRuntimeVersion = {\r\n    description: 'Get the runtime version (alias of state_getRuntimeVersion)',\r\n    params: [\r\n        // @ts-ignore srml types\r\n        createParam('hash', 'Hash', { isOptional: true })\r\n    ],\r\n    type: 'RuntimeVersion'\r\n};\r\nconst subscribeNewHead = {\r\n    description: 'Retrieves the best header via subscription',\r\n    params: [],\r\n    pubsub: [\r\n        'newHead',\r\n        'subscribeNewHead',\r\n        'unsubscribeNewHead'\r\n    ],\r\n    type: 'Header'\r\n};\r\nconst subscribeFinalizedHeads = {\r\n    description: 'Retrieves the best finalized header via subscription',\r\n    params: [],\r\n    pubsub: [\r\n        'finalizedHead',\r\n        'subscribeFinalizedHeads',\r\n        'unsubscribeFinalizedHeads'\r\n    ],\r\n    type: 'Header'\r\n};\r\nconst subscribeRuntimeVersion = {\r\n    description: 'Retrieves the runtime version via subscription',\r\n    params: [],\r\n    pubsub: [\r\n        'runtimeVersion',\r\n        'subscribeRuntimeVersion',\r\n        'unsubscribeRuntimeVersion'\r\n    ],\r\n    type: 'RuntimeVersion'\r\n};\r\nconst section = 'chain';\r\n/**\r\n * @summary Calls to retrieve chain data.\r\n */\r\nexport default {\r\n    isDeprecated: false,\r\n    isHidden: false,\r\n    description: 'Retrieval of chain data',\r\n    section,\r\n    methods: {\r\n        getBlock: createMethod(section, 'getBlock', getBlock),\r\n        getBlockHash: createMethod(section, 'getBlockHash', getBlockHash),\r\n        // TODO US spelling\r\n        getFinalizedHead: createMethod(section, 'getFinalizedHead', getFinalizedHead),\r\n        getHeader: createMethod(section, 'getHeader', getHeader),\r\n        getRuntimeVersion: createMethod(section, 'getRuntimeVersion', getRuntimeVersion),\r\n        // TODO US spelling\r\n        subscribeFinalizedHeads: createMethod(section, 'subscribeFinalizedHeads', subscribeFinalizedHeads),\r\n        subscribeRuntimeVersion: createMethod(section, 'subscribeRuntimeVersion', subscribeRuntimeVersion),\r\n        subscribeNewHead: createMethod(section, 'subscribeNewHead', subscribeNewHead)\r\n    }\r\n};\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/type-jsonrpc/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/packages/type-jsonrpc/src/create/method.ts","/Users/jacogreeff/Projects/polkadot/api/packages/type-jsonrpc/src/create/param.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/type-jsonrpc/src/chain.d.ts","writeByteOrderMark":false,"text":"declare const _default: {\r\n    isDeprecated: boolean;\r\n    isHidden: boolean;\r\n    description: string;\r\n    section: string;\r\n    methods: {\r\n        getBlock: import(\"./types\").RpcMethod;\r\n        getBlockHash: import(\"./types\").RpcMethod;\r\n        getFinalizedHead: import(\"./types\").RpcMethod;\r\n        getHeader: import(\"./types\").RpcMethod;\r\n        getRuntimeVersion: import(\"./types\").RpcMethod;\r\n        subscribeFinalizedHeads: import(\"./types\").RpcMethod;\r\n        subscribeRuntimeVersion: import(\"./types\").RpcMethod;\r\n        subscribeNewHead: import(\"./types\").RpcMethod;\r\n    };\r\n};\r\n/**\r\n * @summary Calls to retrieve chain data.\r\n */\r\nexport default _default;\r\n"}}
