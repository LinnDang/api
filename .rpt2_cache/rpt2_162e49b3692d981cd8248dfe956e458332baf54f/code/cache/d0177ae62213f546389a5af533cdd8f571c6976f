{"code":"// Copyright 2017-2019 @polkadot/types authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport Struct from '../../../codec/Struct';\r\nimport ExtrinsicEra from '../ExtrinsicEra';\r\n/**\r\n * @name ExtrinsicExtraV2\r\n * @description\r\n * A container for the extra information in an extrinsic\r\n */\r\nexport default class ExtrinsicExtraV2 extends Struct {\r\n    constructor(value) {\r\n        super({\r\n            era: ExtrinsicEra,\r\n            nonce: 'Compact<Index>',\r\n            tip: 'Compact<Balance>'\r\n        }, value);\r\n    }\r\n    /**\r\n     * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to\r\n     */\r\n    get era() {\r\n        return this.get('era');\r\n    }\r\n    /**\r\n     * @description The [[Index]] for the signature\r\n     */\r\n    get nonce() {\r\n        return this.get('nonce');\r\n    }\r\n    /**\r\n     * @description The [[Address]] that signed\r\n     */\r\n    get signer() {\r\n        return this.get('signer');\r\n    }\r\n    /**\r\n     * @description The [[Balance]] tip\r\n     */\r\n    get tip() {\r\n        return this.get('tip');\r\n    }\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/types/src/interfaces/runtime/index.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/primitive/Extrinsic/types.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/Compact.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/Struct.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/primitive/Generic/Address.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/primitive/Extrinsic/ExtrinsicEra.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/types/src/primitive/Extrinsic/v2/ExtrinsicExtra.d.ts","writeByteOrderMark":false,"text":"import { Balance, Index } from '../../../interfaces/runtime';\r\nimport { ExtrinsicExtraValue } from '../types';\r\nimport Compact from '../../../codec/Compact';\r\nimport Struct from '../../../codec/Struct';\r\nimport Address from '../../Generic/Address';\r\nimport ExtrinsicEra from '../ExtrinsicEra';\r\n/**\r\n * @name ExtrinsicExtraV2\r\n * @description\r\n * A container for the extra information in an extrinsic\r\n */\r\nexport default class ExtrinsicExtraV2 extends Struct {\r\n    constructor(value?: ExtrinsicExtraValue | Uint8Array);\r\n    /**\r\n     * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to\r\n     */\r\n    readonly era: ExtrinsicEra;\r\n    /**\r\n     * @description The [[Index]] for the signature\r\n     */\r\n    readonly nonce: Compact<Index>;\r\n    /**\r\n     * @description The [[Address]] that signed\r\n     */\r\n    readonly signer: Address;\r\n    /**\r\n     * @description The [[Balance]] tip\r\n     */\r\n    readonly tip: Compact<Balance>;\r\n}\r\n"}}
