{"code":"// Copyright 2017-2019 @polkadot/api-derive authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport { catchError, distinctUntilChanged, publishReplay, refCount } from 'rxjs/operators';\r\nimport { logger } from '@polkadot/util';\r\nconst l = logger('drr');\r\n/**\r\n * Shorthand for distinctUntilChanged(), publishReplay(1) and refCount().\r\n *\r\n * @ignore\r\n */\r\nexport const drr = () => (source$) => source$.pipe(catchError((error) => {\r\n    l.error(error);\r\n    throw error;\r\n}), distinctUntilChanged(), publishReplay(1), refCount());\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/node_modules/rxjs/operators/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/rxjs/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/@polkadot/util/index.d.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/api-derive/src/util/drr.d.ts","writeByteOrderMark":false,"text":"import { Observable } from 'rxjs';\r\ndeclare type DrrResult = <T>(source$: Observable<T>) => Observable<T>;\r\n/**\r\n * Shorthand for distinctUntilChanged(), publishReplay(1) and refCount().\r\n *\r\n * @ignore\r\n */\r\nexport declare const drr: () => DrrResult;\r\nexport {};\r\n"}}
