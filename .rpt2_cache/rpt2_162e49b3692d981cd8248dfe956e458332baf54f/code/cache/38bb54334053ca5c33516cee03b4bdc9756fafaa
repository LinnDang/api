{"code":"// Copyright 2017-2019 @polkadot/types authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport { stringUpperFirst } from '@polkadot/util';\r\nimport { Option, Vec } from '../../codec';\r\nimport { FunctionMetadata } from '../v1/Calls';\r\nimport { EventMetadata } from '../v1/Events';\r\nimport MetadataV1, { ModuleMetadata } from '../v1/Metadata';\r\nimport { StorageFunctionMetadata } from '../v1/Storage';\r\nfunction toV1Calls(modul) {\r\n    return modul.module.call.functions.length === 0\r\n        ? new Option(Vec.with(FunctionMetadata))\r\n        : new Option(Vec.with(FunctionMetadata), modul.module.call.functions);\r\n}\r\nfunction toV1Events(metadataV0, prefix) {\r\n    const events = metadataV0.events.find((event) => event.name.eq(prefix));\r\n    return events\r\n        ? new Option(Vec.with(EventMetadata), events.events)\r\n        : new Option(Vec.with(EventMetadata));\r\n}\r\nfunction toV1Storage(modul) {\r\n    return modul.storage.isNone\r\n        ? new Option(Vec.with(StorageFunctionMetadata))\r\n        : new Option(Vec.with(StorageFunctionMetadata), modul.storage.unwrap().functions);\r\n}\r\n/**\r\n * Function that converts MetadataV0 to MetadataV1\r\n */\r\nexport default function toV1(metadataV0) {\r\n    return new MetadataV1({\r\n        modules: metadataV0.modules.map((modul) => {\r\n            // The prefix of this module (capitalized)\r\n            const prefix = modul.storage.isSome\r\n                ? modul.storage.unwrap().prefix.toString()\r\n                : stringUpperFirst(modul.prefix.toString()); // If this module doesn't have storage, we just assume the prefix is the name capitalized\r\n            return new ModuleMetadata({\r\n                name: modul.prefix,\r\n                prefix,\r\n                storage: toV1Storage(modul),\r\n                calls: toV1Calls(modul),\r\n                events: toV1Events(metadataV0, modul.prefix)\r\n            });\r\n        })\r\n    });\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/node_modules/@polkadot/util/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/index.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/Metadata/v0/Metadata.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/Metadata/v0/Modules.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/primitive/index.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/Metadata/v1/Calls.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/Metadata/v1/Events.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/Metadata/v1/Metadata.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/Metadata/v1/Storage.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/types/src/Metadata/v0/toV1.d.ts","writeByteOrderMark":false,"text":"import MetadataV0 from './Metadata';\r\nimport MetadataV1 from '../v1/Metadata';\r\n/**\r\n * Function that converts MetadataV0 to MetadataV1\r\n */\r\nexport default function toV1(metadataV0: MetadataV0): MetadataV1;\r\n"}}
