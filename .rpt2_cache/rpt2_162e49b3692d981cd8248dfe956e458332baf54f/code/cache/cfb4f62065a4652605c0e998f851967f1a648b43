{"code":"// Copyright 2017-2019 @polkadot/api-derive authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport { combineLatest, of } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { createType } from '@polkadot/types';\r\nimport { drr } from '../util/drr';\r\nimport { votes } from './votes';\r\nimport { votingBalances } from '../balances/votingBalances';\r\nexport function referendumVotesFor(api) {\r\n    return (referendumId) => (api.query.democracy.votersFor(referendumId)).pipe(switchMap((votersFor) => combineLatest([\r\n        of(votersFor),\r\n        votes(api)(referendumId, votersFor),\r\n        votingBalances(api)(votersFor)\r\n    ])), map(([votersFor, votes, balances]) => votersFor.map((accountId, index) => ({\r\n        accountId,\r\n        balance: balances[index].votingBalance || createType('Balance'),\r\n        vote: votes[index] || createType('Vote')\r\n    }))), drr());\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/types/src/interfaces/index.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/@types/bn.js/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/rxjs/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/rxjs/operators/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/index.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-derive/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-derive/src/util/drr.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-derive/src/democracy/votes.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-derive/src/balances/votingBalances.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/api-derive/src/democracy/referendumVotesFor.d.ts","writeByteOrderMark":false,"text":"import BN from 'bn.js';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiInterfaceRx } from '@polkadot/api/types';\r\nimport { DerivedReferendumVote } from '../types';\r\nexport declare function referendumVotesFor(api: ApiInterfaceRx): (referendumId: BN | number) => Observable<DerivedReferendumVote[]>;\r\n"}}
