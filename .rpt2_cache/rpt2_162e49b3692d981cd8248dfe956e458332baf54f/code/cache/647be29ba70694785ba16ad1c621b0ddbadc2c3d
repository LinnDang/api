{"code":"// Copyright 2017-2019 @polkadot/types authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport { TypeDefInfo } from '../../codec/types';\r\nimport { getTypeDef } from '../../codec/createType';\r\nimport flattenUniq from './flattenUniq';\r\nimport { getTypeRegistry } from '../../codec';\r\nfunction extractTypes(types) {\r\n    return types.map((type) => {\r\n        const decoded = getTypeDef(type);\r\n        switch (decoded.info) {\r\n            case TypeDefInfo.Plain:\r\n                return decoded.type;\r\n            case TypeDefInfo.Compact:\r\n            case TypeDefInfo.Option:\r\n            case TypeDefInfo.Vec:\r\n                return extractTypes([decoded.sub.type]);\r\n            case TypeDefInfo.VecFixed:\r\n                return extractTypes([decoded.ext.type]);\r\n            case TypeDefInfo.Tuple:\r\n                return extractTypes(decoded.sub.map((sub) => sub.type));\r\n            default:\r\n                throw new Error(`Uhandled: Unnable to create and validate type from ${type}`);\r\n        }\r\n    });\r\n}\r\nexport default function validateTypes(types, throwError) {\r\n    const typeRegistry = getTypeRegistry();\r\n    const missing = flattenUniq(extractTypes(types)).filter((type) => !typeRegistry.hasType(type));\r\n    if (missing.length !== 0) {\r\n        const message = `Unknown types found, no types for ${missing}`;\r\n        if (throwError) {\r\n            throw new Error(message);\r\n        }\r\n        else {\r\n            console.error(message);\r\n        }\r\n    }\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/types.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/createType.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/Metadata/util/flattenUniq.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/index.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/types/src/Metadata/util/validateTypes.d.ts","writeByteOrderMark":false,"text":"export default function validateTypes(types: string[], throwError: boolean): void;\r\n"}}
