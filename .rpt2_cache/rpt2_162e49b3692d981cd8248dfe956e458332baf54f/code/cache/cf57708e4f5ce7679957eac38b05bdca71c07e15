{"code":"// Copyright 2017-2019 @polkadot/api-derive authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { indexes } from './indexes';\r\nimport { drr } from '../util/drr';\r\n/**\r\n * @name idToIndex\r\n * @param {( AccountId | string )} accountId - An accounts Id in different formats.\r\n * @returns Returns the corresponding AccountIndex.\r\n * @example\r\n * <BR>\r\n *\r\n * ```javascript\r\n * const ALICE = '5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY';\r\n * api.derive.accounts.idToIndex(ALICE, (accountIndex) => {\r\n *   console.log(`The AccountIndex of ${ALICE} is ${accountIndex}`);\r\n * });\r\n * ```\r\n */\r\nexport function idToIndex(api) {\r\n    return (accountId) => indexes(api)()\r\n        .pipe(startWith({}), map((indexes) => (indexes || {})[accountId.toString()]), drr());\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/types/src/interfaces/index.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/rxjs/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/rxjs/operators/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-derive/src/accounts/indexes.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-derive/src/util/drr.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/api-derive/src/accounts/idToIndex.d.ts","writeByteOrderMark":false,"text":"import { AccountId, AccountIndex } from '@polkadot/types/interfaces';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiInterfaceRx } from '@polkadot/api/types';\r\n/**\r\n * @name idToIndex\r\n * @param {( AccountId | string )} accountId - An accounts Id in different formats.\r\n * @returns Returns the corresponding AccountIndex.\r\n * @example\r\n * <BR>\r\n *\r\n * ```javascript\r\n * const ALICE = '5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY';\r\n * api.derive.accounts.idToIndex(ALICE, (accountIndex) => {\r\n *   console.log(`The AccountIndex of ${ALICE} is ${accountIndex}`);\r\n * });\r\n * ```\r\n */\r\nexport declare function idToIndex(api: ApiInterfaceRx): (accountId: AccountId | string) => Observable<AccountIndex | undefined>;\r\n"}}
