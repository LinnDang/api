{"code":"// Copyright 2017-2019 @polkadot/api-derive authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nexport function approvalFlagsToBools(flags) {\r\n    const bools = [];\r\n    flags.forEach((flag) => {\r\n        const str = flag.toString(2);\r\n        // read from lowest bit to highest\r\n        for (const bit of str.split('').reverse()) {\r\n            bools.push(!!parseInt(bit, 10));\r\n        }\r\n    });\r\n    // slice off trailing \"false\" values, as in substrate\r\n    const lastApproval = bools.lastIndexOf(true);\r\n    return lastApproval >= 0 ? bools.slice(0, lastApproval + 1) : [];\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/types/src/interfaces/elections/index.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/index.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/api-derive/src/util/approvalFlagsToBools.d.ts","writeByteOrderMark":false,"text":"import { ApprovalFlag } from '@polkadot/types/interfaces/elections';\r\nimport { Vec } from '@polkadot/types';\r\nexport declare function approvalFlagsToBools(flags: Vec<ApprovalFlag> | ApprovalFlag[]): boolean[];\r\n"}}
