{"code":"// Copyright 2017-2019 @polkadot/rpc-provider authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport { assert, isUndefined, isNumber } from '@polkadot/util';\r\nexport default class RpcCoder {\r\n    constructor() {\r\n        this.id = 0;\r\n    }\r\n    decodeResponse(response) {\r\n        assert(response, 'Empty response object received');\r\n        assert(response.jsonrpc === '2.0', 'Invalid jsonrpc field in decoded object');\r\n        const isSubscription = !isUndefined(response.params) && !isUndefined(response.method);\r\n        assert(isNumber(response.id) || (isSubscription && isNumber(response.params.subscription)), 'Invalid id field in decoded object');\r\n        this.checkError(response.error);\r\n        assert(!isUndefined(response.result) || isSubscription, 'No result found in JsonRpc response');\r\n        if (isSubscription) {\r\n            this.checkError(response.params.error);\r\n            return response.params.result;\r\n        }\r\n        return response.result;\r\n    }\r\n    encodeJson(method, params) {\r\n        return JSON.stringify(this.encodeObject(method, params));\r\n    }\r\n    encodeObject(method, params) {\r\n        return {\r\n            id: ++this.id,\r\n            jsonrpc: '2.0',\r\n            method,\r\n            params\r\n        };\r\n    }\r\n    getId() {\r\n        return this.id;\r\n    }\r\n    checkError(error) {\r\n        if (error) {\r\n            const { code, data, message } = error;\r\n            const _data = isUndefined(data)\r\n                ? ''\r\n                : ' (' + `${data}`.substr(0, 10) + ')';\r\n            console.error(`${code}: ${message}${_data}`);\r\n            throw new Error(`${code}: ${message}${_data}`);\r\n        }\r\n    }\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/rpc-provider/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/@polkadot/util/index.d.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/rpc-provider/src/coder/index.d.ts","writeByteOrderMark":false,"text":"import { JsonRpcRequest, JsonRpcResponse } from '../types';\r\nexport default class RpcCoder {\r\n    private id;\r\n    decodeResponse(response: JsonRpcResponse): any;\r\n    encodeJson(method: string, params: any | any[]): string;\r\n    encodeObject(method: string, params: any | any[]): JsonRpcRequest;\r\n    getId(): number;\r\n    private checkError;\r\n}\r\n"}}
