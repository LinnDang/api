{"code":"// Copyright 2017-2019 @polkadot/types authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport { isFunction, isObject, isUndefined } from '@polkadot/util';\r\n// NOTE These are used internally and when comparing objects, expects that\r\n// when the second is an Map<string, Codec> that the first has to be as well\r\nexport default function compareMap(a, b) {\r\n    if (Array.isArray(b)) {\r\n        return (a.size === b.length) && isUndefined(b.find((entry) => {\r\n            if (!Array.isArray(entry) || entry.length !== 2) {\r\n                return true;\r\n            }\r\n            const value = a.get(entry[0]);\r\n            return isUndefined(value) || (\r\n            // Codec has .eq, use it here\r\n            isFunction(value.eq)\r\n                ? !value.eq(entry[1])\r\n                : value !== entry[1]);\r\n        }));\r\n    }\r\n    else if (b instanceof Map) {\r\n        return compareMap(a, [...b.entries()]);\r\n    }\r\n    else if (isObject(b)) {\r\n        return compareMap(a, Object.entries(b));\r\n    }\r\n    return false;\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/node_modules/@polkadot/util/index.d.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/types/src/codec/utils/compareMap.d.ts","writeByteOrderMark":false,"text":"export default function compareMap(a: Map<any, any>, b?: any): boolean;\r\n"}}
