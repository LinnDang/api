{"code":"// Copyright 2017-2019 @polkadot/types authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport Struct from '../../../codec/Struct';\r\nimport U8a from '../../../codec/U8a';\r\nimport ExtrinsicEra from '../ExtrinsicEra';\r\nimport { sign } from '../util';\r\n/**\r\n * @name ExtrinsicPayloadV3\r\n * @description\r\n * A signing payload for an [[Extrinsic]]. For the final encoding, it is variable length based\r\n * on the contents included\r\n */\r\nexport default class ExtrinsicPayloadV3 extends Struct {\r\n    constructor(value) {\r\n        super({\r\n            method: U8a,\r\n            era: ExtrinsicEra,\r\n            nonce: 'Compact<Index>',\r\n            tip: 'Compact<Balance>',\r\n            genesisHash: 'Hash',\r\n            blockHash: 'Hash'\r\n        }, value);\r\n    }\r\n    /**\r\n     * @description The block [[Hash]] the signature applies to (mortal/immortal)\r\n     */\r\n    get blockHash() {\r\n        return this.get('blockHash');\r\n    }\r\n    /**\r\n     * @description The [[ExtrinsicEra]]\r\n     */\r\n    get era() {\r\n        return this.get('era');\r\n    }\r\n    /**\r\n     * @description The genesis [[Hash]] the signature applies to (mortal/immortal)\r\n     */\r\n    get genesisHash() {\r\n        return this.get('genesisHash');\r\n    }\r\n    /**\r\n     * @description The [[U8a]] contained in the payload\r\n     */\r\n    get method() {\r\n        return this.get('method');\r\n    }\r\n    /**\r\n     * @description The [[Index]]\r\n     */\r\n    get nonce() {\r\n        return this.get('nonce');\r\n    }\r\n    /**\r\n     * @description The tip [[Balance]]\r\n     */\r\n    get tip() {\r\n        return this.get('tip');\r\n    }\r\n    /**\r\n     * @description Sign the payload with the keypair\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    sign(signerPair) {\r\n        return sign(signerPair, this.toU8a());\r\n    }\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/types/src/interfaces/runtime/index.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/Compact.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/Struct.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/U8a.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/primitive/Extrinsic/ExtrinsicEra.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/primitive/Extrinsic/util.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/types/src/primitive/Extrinsic/v3/ExtrinsicPayload.d.ts","writeByteOrderMark":false,"text":"import { Balance, Hash, Index } from '../../../interfaces/runtime';\r\nimport { ExtrinsicPayloadValue, IKeyringPair } from '../../../types';\r\nimport Compact from '../../../codec/Compact';\r\nimport Struct from '../../../codec/Struct';\r\nimport U8a from '../../../codec/U8a';\r\nimport ExtrinsicEra from '../ExtrinsicEra';\r\n/**\r\n * @name ExtrinsicPayloadV3\r\n * @description\r\n * A signing payload for an [[Extrinsic]]. For the final encoding, it is variable length based\r\n * on the contents included\r\n */\r\nexport default class ExtrinsicPayloadV3 extends Struct {\r\n    constructor(value?: ExtrinsicPayloadValue | Uint8Array | string);\r\n    /**\r\n     * @description The block [[Hash]] the signature applies to (mortal/immortal)\r\n     */\r\n    readonly blockHash: Hash;\r\n    /**\r\n     * @description The [[ExtrinsicEra]]\r\n     */\r\n    readonly era: ExtrinsicEra;\r\n    /**\r\n     * @description The genesis [[Hash]] the signature applies to (mortal/immortal)\r\n     */\r\n    readonly genesisHash: Hash;\r\n    /**\r\n     * @description The [[U8a]] contained in the payload\r\n     */\r\n    readonly method: U8a;\r\n    /**\r\n     * @description The [[Index]]\r\n     */\r\n    readonly nonce: Compact<Index>;\r\n    /**\r\n     * @description The tip [[Balance]]\r\n     */\r\n    readonly tip: Compact<Balance>;\r\n    /**\r\n     * @description Sign the payload with the keypair\r\n     */\r\n    sign(signerPair: IKeyringPair): Uint8Array;\r\n}\r\n"}}
