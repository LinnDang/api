{"code":"// Copyright 2017-2019 @polkadot/types authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport Bytes from '../../primitive/Bytes';\r\nimport Text from '../../primitive/Text';\r\nimport Type from '../../primitive/Type';\r\nimport Struct from '../../codec/Struct';\r\nimport Vec from '../../codec/Vec';\r\nexport class ModuleConstantMetadata extends Struct {\r\n    constructor(value) {\r\n        super({\r\n            name: Text,\r\n            type: Type,\r\n            value: Bytes,\r\n            documentation: Vec.with(Text)\r\n        }, value);\r\n    }\r\n    /**\r\n     * @description The argument name\r\n     */\r\n    get name() {\r\n        return this.get('name');\r\n    }\r\n    /**\r\n     * @description The [[Type]]\r\n     */\r\n    get type() {\r\n        return this.get('type');\r\n    }\r\n    /**\r\n     * @description The value as [[Bytes]]\r\n     */\r\n    get value() {\r\n        return this.get('value');\r\n    }\r\n    /**\r\n     * @description The documentation\r\n     */\r\n    get documentation() {\r\n        return this.get('documentation');\r\n    }\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/types/src/primitive/Bytes.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/primitive/Text.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/primitive/Type.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/Struct.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/codec/Vec.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/types/src/Metadata/v6/Constants.d.ts","writeByteOrderMark":false,"text":"import Bytes from '../../primitive/Bytes';\r\nimport Text from '../../primitive/Text';\r\nimport Type from '../../primitive/Type';\r\nimport Struct from '../../codec/Struct';\r\nimport Vec from '../../codec/Vec';\r\nexport declare class ModuleConstantMetadata extends Struct {\r\n    constructor(value?: any);\r\n    /**\r\n     * @description The argument name\r\n     */\r\n    readonly name: Text;\r\n    /**\r\n     * @description The [[Type]]\r\n     */\r\n    readonly type: Type;\r\n    /**\r\n     * @description The value as [[Bytes]]\r\n     */\r\n    readonly value: Bytes;\r\n    /**\r\n     * @description The documentation\r\n     */\r\n    readonly documentation: Vec<Text>;\r\n}\r\n"}}
