{"code":"// Copyright 2017-2019 @polkadot/api-derive authors & contributors\r\n// This software may be modified and distributed under the terms\r\n// of the Apache-2.0 license. See the LICENSE file for details.\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { ENUMSET_SIZE } from '@polkadot/types/primitive/Generic/AccountIndex';\r\nimport { createType, ClassOf } from '@polkadot/types';\r\nimport { drr } from '../util/drr';\r\n/**\r\n * @name indexToId\r\n * @param {( AccountIndex | string )} accountIndex - An accounts index in different formats.\r\n * @returns Returns the corresponding AccountId.\r\n * @example\r\n * <BR>\r\n *\r\n * ```javascript\r\n * api.derive.accounts.indexToId('F7Hs', (accountId) => {\r\n *   console.log(`The AccountId of F7Hs is ${accountId}`);\r\n * });\r\n * ```\r\n */\r\nexport function indexToId(api) {\r\n    return (_accountIndex) => {\r\n        const querySection = api.query.indices || api.query.balances;\r\n        const accountIndex = _accountIndex instanceof ClassOf('AccountIndex')\r\n            ? _accountIndex\r\n            : createType('AccountIndex', _accountIndex);\r\n        return (querySection.enumSet(accountIndex.div(ENUMSET_SIZE)))\r\n            .pipe(startWith([]), map((accounts) => (accounts || [])[accountIndex.mod(ENUMSET_SIZE).toNumber()]), drr());\r\n    };\r\n}\r\n","references":["/Users/jacogreeff/Projects/polkadot/api/packages/types/src/interfaces/index.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/rxjs/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/node_modules/rxjs/operators/index.d.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api/src/types.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/primitive/Generic/AccountIndex.ts","/Users/jacogreeff/Projects/polkadot/api/packages/types/src/index.ts","/Users/jacogreeff/Projects/polkadot/api/packages/api-derive/src/util/drr.ts"],"dts":{"name":"/Users/jacogreeff/Projects/polkadot/api/api-derive/src/accounts/indexToId.d.ts","writeByteOrderMark":false,"text":"import { AccountId, AccountIndex } from '@polkadot/types/interfaces';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiInterfaceRx } from '@polkadot/api/types';\r\n/**\r\n * @name indexToId\r\n * @param {( AccountIndex | string )} accountIndex - An accounts index in different formats.\r\n * @returns Returns the corresponding AccountId.\r\n * @example\r\n * <BR>\r\n *\r\n * ```javascript\r\n * api.derive.accounts.indexToId('F7Hs', (accountId) => {\r\n *   console.log(`The AccountId of F7Hs is ${accountId}`);\r\n * });\r\n * ```\r\n */\r\nexport declare function indexToId(api: ApiInterfaceRx): (accountIndex: AccountIndex | string) => Observable<AccountId | undefined>;\r\n"}}
